# Generated by Django 5.2.7 on 2025-10-22 14:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actuator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('binary', 'Binary'), ('level', 'Level'), ('setpoint', 'Setpoint')], max_length=16)),
                ('range_min', models.FloatField(blank=True, null=True)),
                ('range_max', models.FloatField(blank=True, null=True)),
                ('step', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('title', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('command', models.CharField(help_text='ON|OFF|SET', max_length=32)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('sent', 'Sent'), ('success', 'Success'), ('failed', 'Failed')], default='queued', max_length=16)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('actuator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='core.actuator')),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commands', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommandArg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('value', models.TextField()),
                ('command', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='args', to='core.command')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('house', 'House'), ('sauna', 'Sauna'), ('greenhouse', 'Greenhouse'), ('woodshed', 'Woodshed'), ('garage', 'Garage'), ('cellar', 'Cellar'), ('pool', 'Pool'), ('grill', 'Grill')], max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['type'], name='core_facili_type_21558e_idx')],
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160)),
                ('expr', models.TextField(help_text='Напр.: pm2_5 > 50')),
                ('window_s', models.IntegerField(default=0)),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('critical', 'Critical')], default='warning', max_length=16)),
                ('enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('min_val', models.FloatField(blank=True, null=True)),
                ('max_val', models.FloatField(blank=True, null=True)),
                ('sampling_s', models.IntegerField(default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='core.facility')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sensors', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensors', to='core.unit')),
            ],
        ),
        migrations.CreateModel(
            name='RuleSensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rule')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sensor')),
            ],
        ),
        migrations.AddField(
            model_name='rule',
            name='sensors',
            field=models.ManyToManyField(related_name='rules', through='core.RuleSensor', to='core.sensor'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[('open', 'Open'), ('ack', 'Ack'), ('closed', 'Closed')], default='open', max_length=16)),
                ('message', models.TextField(blank=True, null=True)),
                ('ack_at', models.DateTimeField(blank=True, null=True)),
                ('ack_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acked_alerts', to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='core.rule')),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='core.sensor')),
            ],
        ),
        migrations.AddField(
            model_name='actuator',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actuators', to='core.sensor'),
        ),
        migrations.AddIndex(
            model_name='command',
            index=models.Index(fields=['actuator'], name='core_comman_actuato_4d371a_idx'),
        ),
        migrations.AddIndex(
            model_name='command',
            index=models.Index(fields=['issued_at'], name='core_comman_issued__79da88_idx'),
        ),
        migrations.AddIndex(
            model_name='command',
            index=models.Index(fields=['status'], name='core_comman_status_40dab3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commandarg',
            unique_together={('command', 'name')},
        ),
        migrations.AddIndex(
            model_name='rulesensor',
            index=models.Index(fields=['sensor'], name='core_rulese_sensor__e27932_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rulesensor',
            unique_together={('rule', 'sensor')},
        ),
        migrations.AddIndex(
            model_name='rule',
            index=models.Index(fields=['user'], name='core_rule_user_id_9bb1b1_idx'),
        ),
        migrations.AddIndex(
            model_name='rule',
            index=models.Index(fields=['enabled'], name='core_rule_enabled_c46b75_idx'),
        ),
        migrations.AddIndex(
            model_name='rule',
            index=models.Index(fields=['severity'], name='core_rule_severit_33bad2_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['rule'], name='core_alert_rule_id_c3c6ea_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['sensor'], name='core_alert_sensor__9b1cbc_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['state'], name='core_alert_state_61ab90_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['started_at'], name='core_alert_started_badb1a_idx'),
        ),
        migrations.AddIndex(
            model_name='actuator',
            index=models.Index(fields=['sensor'], name='core_actuat_sensor__1cd4d4_idx'),
        ),
        migrations.AddIndex(
            model_name='actuator',
            index=models.Index(fields=['type'], name='core_actuat_type_f082f3_idx'),
        ),
        migrations.AddIndex(
            model_name='sensor',
            index=models.Index(fields=['facility'], name='core_sensor_facilit_db6bde_idx'),
        ),
        migrations.AddIndex(
            model_name='sensor',
            index=models.Index(fields=['user'], name='core_sensor_user_id_e9662f_idx'),
        ),
        migrations.AddIndex(
            model_name='sensor',
            index=models.Index(fields=['unit'], name='core_sensor_unit_id_9aa230_idx'),
        ),
        migrations.AddIndex(
            model_name='sensor',
            index=models.Index(fields=['name'], name='core_sensor_name_04a98b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sensor',
            unique_together={('facility', 'name')},
        ),
    ]
